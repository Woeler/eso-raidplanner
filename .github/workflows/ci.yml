name: CI & Deployment

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - '7.4'

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: pcov

      - name: php --version
        run: php --version

      - name: composer --version
        run: composer --version

      - name: (COMPOSER) Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: (CGL) PHP
        run: php bin/php-cs-fixer fix --config build/.php_cs -v --dry-run --diff
        
  deploy:
    runs-on: [ubuntu-latest]
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    needs: build
    strategy:
        fail-fast: false
        matrix:
          php-versions:
            - '7.4'

    steps:
      - uses: actions/checkout@v2
          
      - uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          
      - name: Set app env
        run: echo "APP_ENV=prod" > .env.local

      - name: (COMPOSER) Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction --no-dev

      - name: Yarn install
        run: yarn install
  
      - name: Yarn build
        run: yarn build
      
      - name: Install bot via yarn
        run: cd bot/ && yarn install

      - name: Tar files
        run: tar -czf dist.tar.gz bin bot config public src templates vendor .env
      
      - name: Copy dist.tar.gz to server via scp
        uses: garygrossgarten/github-action-scp@release
        with:
          local: dist.tar.gz
          remote: ${{ secrets.DEPLOY_PATH }}/dist.tar.gz
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}

      - name: Extract and cleanup on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            rm -rf bin bot config public src templates vendor .env
            tar -xf dist.tar.gz
            rm -rf var/cache
            cp config.json bot/config.json
            php7.4 bin/console doctrine:migrations:migrate --no-interaction
            php7.4 bin/console messenger:stop-workers
            rm dist.tar.gz
            cd bot/ && pm2 stop "Raidplanner2" && pm2 delete "Raidplanner2" && pm2 start ecosystem.config.js
